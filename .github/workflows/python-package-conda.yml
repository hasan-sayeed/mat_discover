name: Python Package using Conda

on:
  push:
    paths:
#     - '**.py' # only run workflow when source files changed

jobs:
  build-linux:
    runs-on: windows-latest #ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
      
#     - uses: psf/black@stable #https://black.readthedocs.io/en/stable/integrations/github_actions.html
    
#     - uses: conda-incubator/setup-miniconda@v2
#       with:
#         python-version: 3.8
#         mamba-version: "*"
#         channels: conda-forge,defaults
#         channel-priority: true
#         activate-environment: mat_discover
#         environment-file: environment.yml
#     - shell: bash -l {0}
#       run: |
#         conda info
#         conda list
#         conda config --show-sources
#         conda config --show
#         printenv | sort
#     - shell: bash -l {0}
#       run: mamba install jupyterlab
#       run: mamba env create -f environment.yml # already taken care of above
#       with:
#         python-version: 3.8
#     - name: Add conda to system path
#       run: |
#         # $CONDA is an environment variable pointing to the root of the miniconda directory
#         echo $CONDA/bin >> $GITHUB_PATH
#     - name: Install dependencies
#       run: |
#         conda env update --file environment.yml --name base
#     #- name: Lint with flake8
#     #  run: |
#     #    conda install flake8
#     #    # stop the build if there are Python syntax errors or undefined names
#     #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#     #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#     #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      shell: bash -l {0}
      run: |
        python -m pip install --upgrade pip
        pip install flit
        export PIP_FIND_LINKS=https://download.pytorch.org/whl/torch_stable.html
        flit install --deps production --extras test,gpu
        python -m pytest
